/**
\mainpage
\htmlinclude manifest.html
\tableofcontents
# Grijper # {#toppage}
## Controlling a robotic hand ##
<https://github.com/svanschooten/Grijper>

\b Grijper is a package containing nodes that are used to control a motorised robotic hand, henceforth called the 'gripper'.

This is done by reading and evaluating a sensor and it's values using the phidget in the phidget_reader node. These are compared to set threshold values to decide if the gripper should be opened or closed. This is done in the controller. Commands are then sent to the actuator which controlls the motor powering the gripper. This actuator node then publishes the motor state.

This state is picked up by an rviz node that visualises and controls the gripper model in rviz. The state is given as a float between 0.0 and 1.0. 0.0 indicating the gripper is completely open and 1.0 indicates the gripper has been closed.
Another rviz node listens to the phidget sensor values and visualises a cyllinder mimicking the position of the oject relative to the gripper.

<hr>

\section commandline Command-line tools

The Grijper package can also be built by launching the Grijper.launch file.
It will encapsule the console in the current console, enabling control but hiding all reduntant information from the other nodes.

\subsection script_name Grijper.launch

Description of what this script/file does.

\subsubsection Usage
\verbatim
$ roslaunch Grijper Grijper.launch
\endverbatim

[back to top ](#toppage)
<hr>

\section rosapi ROS Grijper API

Because of the independent and standardised setup of this package, Grijper only consists of communicating nodes that can run independently (though having almost to no functionality without their proper messages).

List of nodes:
- \b [gripper_console](./console_8cpp.html)
- \b [gripper_controller](./gripper__controller_8cpp.html)
- \b [gripper_actuator](./gripper__actuator_8cpp.html)
- \b [phidget_reader](./phidget__reader_8cpp.html)
- \b [rviz_gripper](./rviz__gripper_8cpp.html)
- \b [rviz_object](./rviz__object_8cpp.html)

[back to top ](#toppage)
<hr>

\subsection gripper_console gripper_console

gripper_console makes the system controllable by the user through console input and output.

\subsubsection console_commands Commands
- \b 'open' Opens the gripper.
- \b 'close' Closes the gripper.
- \b 'relax' Relaxes the gripper.
- \b 'force < target force >' Sets the target force to '< target force >' to be used in future commands.
- \b 'get_force' Returns the current target force.
- \b 'exit' Sends the shutdown signal to all nodes and shuts down.

\subsubsection console_usage Usage
\verbatim
$ rosrun Grijper gripper_console [standard ROS args]
\endverbatim

\subsubsection console_topics topics ROS topics

Publishes to:
- \b "gripper_force": [std_msgs/Float32] The set target force at which the gripper should close.
- \b "command": [std_msgs/String] The command to be passed on.
- \b "shutdown" [std_msgs/Bool] The shutdown command.

[back to top ](#toppage)
<hr>

\subsection gripper_controller gripper_controller

gripper_controller listens to the phidget and console, thus deciding and controlling the system. Published commands to the actuator.

\subsubsection controller_usage Usage
\verbatim
$ rosrun Grijper gripper_controller [standard ROS args]
\endverbatim

\subsubsection controller_topics topics ROS topics

Publishes to:
- \b "gripper_control": [Grijper/command] The command to be passed on, contains a 'cmd' string and a 'force' float.

Subscribes to:
- \b "gripper_force": [std_msgs/Float32] The set target force at which the gripper should close.
- \b "command": [std_msgs/String] The command to be passed on.
- \b "shutdown" [std_msgs/Bool] The shutdown command.
- \b "phidget_value" [std_msgs/Float32] The calculated distance from the read value.

[back to top ](#toppage)
<hr>

\subsection gripper_actuator gripper_actuator

gripper_actuator does...

\subsubsection actuator_usage Usage
\verbatim
$ rosrun Grijper gripper_actuator [standard ROS args]
\endverbatim

\subsubsection actuator_topics ROS topics

Publishes to:
- \b "out": [std_msgs/Float32] dummy.

Subscribes to:
- \b "int": [std_msgs/Float32] dummy.

[back to top ](#toppage)
<hr>

\subsection phidget_reader phidget_reader

phidget_reader does...

\subsubsection reader_usage Usage
\verbatim
$ rosrun Grijper phidget_reader [standard ROS args]
\endverbatim

\subsubsection reader_topics ROS topics

Publishes to:
- \b "out": [std_msgs/Float32] dummy.

Subscribes to:
- \b "int": [std_msgs/Float32] dummy.

[back to top ](#toppage)
<hr>

\subsection rviz_gripper rviz_gripper

rviz_gripper does...

\subsubsection rviz_gripper_usage Usage
\verbatim
$ rosrun Grijper rviz_gripper [standard ROS args]
\endverbatim

\subsubsection rviz_gripper_topics ROS topics

Publishes to:
- \b "out": [std_msgs/Float32] dummy.

Subscribes to:
- \b "int": [std_msgs/Float32] dummy.

[back to top ](#toppage)
<hr>

\subsection rviz_object rviz_object

rviz_object does...

\subsubsection rviz_object_usage Usage
\verbatim
$ rosrun Grijper rviz_object [standard ROS args]
\endverbatim

\subsubsection rviz_object_topics ROS topics

Publishes to:
- \b "out": [std_msgs/Float32] dummy.

Subscribes to:
- \b "int": [std_msgs/Float32] dummy.

[back to top ](#toppage)
*/